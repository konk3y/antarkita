from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7908023640:AAHfy4Ve_744A4ueLvN_7VP-cKfc2IkuZEQ'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context):
    keyboard = [
        [KeyboardButton("üåä ATLANTIDA üåä", web_app=WebAppInfo(url="https://yourname.github.io/atlantida-web-app"))],
        [KeyboardButton("‚ÑπÔ∏è FAQ"), KeyboardButton("üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
        [KeyboardButton("üèõÔ∏è –ö–∞–Ω–∞–ª"), KeyboardButton("üí∞ –û–ü–¢")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω ATLANTIDA! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ (Web App)
async def store(update: Update, context):
    await update.message.reply_text("–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω: [–ü–µ—Ä–µ–π—Ç–∏](https://yourname.github.io/atlantida-web-app)", parse_mode='Markdown')

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è FAQ
async def faq(update: Update, context):
    await update.message.reply_text("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n1. –ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?\n2. –ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å?\n3. –ö–∞–∫–æ–π —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏?")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
async def support(update: Update, context):
    await update.message.reply_text("–ö–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\nEmail: support@yourstore.com\nTelegram: @admin_support")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞
async def channel(update: Update, context):
    await update.message.reply_text("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É: [–ö–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞](https://t.me/yourchannel)")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–ø—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
async def opt(update: Update, context):
    await update.message.reply_text("–ó–∞–∫–∞–∑—ã –æ–ø—Ç–æ–º:\n–ü—Ä–∞–π—Å: [–°–∫–∞—á–∞—Ç—å](https://yourstore.com/price)\n–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–ø—Ç–∞: @opt_manager")

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def handle_message(update: Update, context):
    text = update.message.text
    if text == 'üåä ATLANTIDA üåä':
        await store(update, context)
    elif text == '‚ÑπÔ∏è FAQ':
        await faq(update, context)
    elif text == 'üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        await support(update, context)
    elif text == 'üèõÔ∏è –ö–∞–Ω–∞–ª':
        await channel(update, context)
    elif text == 'üí∞ –û–ü–¢':
        await opt(update, context)
    else:
        await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ Web App
async def handle_web_app_data(update: Update, context):
    data = update.message.web_app_data.data  # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App
    await update.message.reply_text(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App: {data}")

if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = ApplicationBuilder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    app.add_handler(CommandHandler('start', start))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    app.run_polling()
